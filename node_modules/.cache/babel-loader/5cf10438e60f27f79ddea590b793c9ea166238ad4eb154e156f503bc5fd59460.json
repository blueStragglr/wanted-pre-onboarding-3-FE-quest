{"ast":null,"code":"var _jsxFileName = \"/Users/johyeyeon/so-hyeppy/src/Pages/Layout/SideNav.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport tw from 'tailwind-styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { urlParams } from \"../../Atom/Atoms\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategoryList = _ref => {\n  let {\n    post\n  } = _ref;\n  let headTitle = sideNavMap.get(post.name);\n  if (headTitle) {\n    let sideNameDataMain = headTitle === null || headTitle === void 0 ? void 0 : headTitle.main; // Object is possibly 'null' 에러가 계속 떠서 옵셔널체이닝 사용하여 처리.\n    return /*#__PURE__*/_jsxDEV(SideNavMain, {\n      children: sideNameDataMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = CategoryList;\nconst SideNav = _ref2 => {\n  _s();\n  var _sideNavMap$get, _sideNavMap$get2;\n  let {\n    post\n  } = _ref2;\n  const [urlCheck, setUrlCheck] = useRecoilState(urlParams);\n  const [select, setSelect] = useState();\n  const navigate = useNavigate();\n  // click -> 클릭한 카테고리 파라미터 넘김\n  const handleClick = (name, type, page, params) => {\n    setSelect(name); // 클릭한 nav is_active\n    navigate(`/${params}?${type ? type : ''}`);\n    setUrlCheck(type);\n  };\n  const {\n    name,\n    sideNavPropsName\n  } = post;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SideNavWrap, {\n      className: \"p-[32px]\",\n      children: [/*#__PURE__*/_jsxDEV(CategoryList, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SideNavMainSubList, {\n        children: sideNavMap.get(post.name) && ((_sideNavMap$get = sideNavMap.get(post.name)) === null || _sideNavMap$get === void 0 ? void 0 : _sideNavMap$get.data) && ((_sideNavMap$get2 = sideNavMap.get(post.name)) === null || _sideNavMap$get2 === void 0 ? void 0 : _sideNavMap$get2.data.map((row, index) => {\n          return /*#__PURE__*/_jsxDEV(SideNavMainSubItem, {\n            onClick: () => {\n              handleClick(row.name, row.type, sideNavPropsName, name);\n            },\n            className: ` ${select === row.name ? 'sideNav is_active' : ''};`,\n            children: row.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(SideNav, \"3acHjZQIldLvcP9OBQm8fmRzzek=\", false, function () {\n  return [useRecoilState, useNavigate];\n});\n_c2 = SideNav;\nconst sideNavArr = {\n  TodoList: {\n    id: 1,\n    main: 'To-Do-List',\n    data: [{\n      name: '오늘 할 일',\n      type: 'today'\n    }, {\n      name: '지난 할 일',\n      type: 'past'\n    }]\n    // data: ['오늘 할 일','지난 할 일']\n  },\n\n  Attendance: {\n    id: 2,\n    main: '근무/휴가',\n    data: [{\n      name: '근무/휴가',\n      type: ''\n    }]\n  }\n};\nconst entry = Object.entries(sideNavArr);\nconst sideNavMap = new Map(entry);\nconsole.log('sideNavMap', sideNavMap);\nconst SideNavWrap = tw.div`\n  w-[240px] h-[calc(100vh + 50px)]] bg-[#F8F8F8]\n`;\n_c3 = SideNavWrap;\nconst SideNavMain = tw.div`\n    text-[20px] font-bold\n`;\n_c4 = SideNavMain;\nconst SideNavMainSubList = tw.ul`\n\n`;\n_c5 = SideNavMainSubList;\nconst SideNavMainSubItem = tw.li`\n    text-[16px]\n    cursor-pointer\n`;\n_c6 = SideNavMainSubItem;\nexport default SideNav;\n\n// const SideNav: React.FunctionComponent<sideNavProps> = props => {\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CategoryList\");\n$RefreshReg$(_c2, \"SideNav\");\n$RefreshReg$(_c3, \"SideNavWrap\");\n$RefreshReg$(_c4, \"SideNavMain\");\n$RefreshReg$(_c5, \"SideNavMainSubList\");\n$RefreshReg$(_c6, \"SideNavMainSubItem\");","map":{"version":3,"names":["React","useState","tw","useNavigate","useRecoilState","urlParams","CategoryList","post","headTitle","sideNavMap","get","name","sideNameDataMain","main","SideNav","urlCheck","setUrlCheck","select","setSelect","navigate","handleClick","type","page","params","sideNavPropsName","data","map","row","index","sideNavArr","TodoList","id","Attendance","entry","Object","entries","Map","console","log","SideNavWrap","div","SideNavMain","SideNavMainSubList","ul","SideNavMainSubItem","li"],"sources":["/Users/johyeyeon/so-hyeppy/src/Pages/Layout/SideNav.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport tw from 'tailwind-styled-components';\nimport { useNavigate, useLocation, NavLink } from 'react-router-dom';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport {urlParams} from \"../../Atom/Atoms\";\n\ninterface sideNavProps {\n    sideNavPropsName: string;\n    name: string;\n}\n\nconst CategoryList = ({ post }: { post: sideNavProps }) =>{\n    let headTitle = sideNavMap.get(post.name);\n    if (headTitle) {\n        let sideNameDataMain = headTitle?.main // Object is possibly 'null' 에러가 계속 떠서 옵셔널체이닝 사용하여 처리.\n        return <SideNavMain>{sideNameDataMain}</SideNavMain>\n    }\n    return <></>\n}\nconst SideNav = ({ post }: { post: sideNavProps }) => {\n    const [urlCheck, setUrlCheck] = useRecoilState(urlParams);\n    const [select,setSelect] = useState<string>();\n    const navigate = useNavigate();\n    // click -> 클릭한 카테고리 파라미터 넘김\n    const handleClick = (name: string,type: string,page:string,params:string) => {\n        setSelect(name); // 클릭한 nav is_active\n        navigate(`/${params}?${type?type:''}`);\n        setUrlCheck(type);\n    };\n    const { name, sideNavPropsName } = post;\n    return (\n        <>\n            <SideNavWrap className=\"p-[32px]\">\n                <CategoryList post={post}></CategoryList>\n                <SideNavMainSubList>\n                    {\n                        sideNavMap.get(post.name)&&\n                        sideNavMap.get(post.name)?.data &&\n                        (sideNavMap.get(post.name)?.data.map((row:any,index:number)=>{\n                            return (\n                                <SideNavMainSubItem key={index} onClick={()=>{\n                                    handleClick(row.name,row.type,sideNavPropsName,name);\n                                }}className={` ${select === row.name ? 'sideNav is_active' : ''};`} >\n                                    {row.name}\n                                </SideNavMainSubItem>\n                            )\n                        }))\n                    }\n                </SideNavMainSubList>\n            </SideNavWrap>\n        </>\n    );\n};\n\nconst sideNavArr = {\n    TodoList : {\n        id: 1,\n        main: 'To-Do-List',\n        data: [{name:'오늘 할 일', type:'today'},{name:'지난 할 일',type:'past'}]\n        // data: ['오늘 할 일','지난 할 일']\n    },\n    Attendance: {\n        id: 2,\n        main: '근무/휴가',\n        data: [{name:'근무/휴가', type: ''}]\n    }\n}\n\nconst entry = Object.entries(sideNavArr);\nconst sideNavMap = new Map(entry);\nconsole.log('sideNavMap',sideNavMap);\n\nconst SideNavWrap = tw.div`\n  w-[240px] h-[calc(100vh + 50px)]] bg-[#F8F8F8]\n`;\nconst SideNavMain = tw.div`\n    text-[20px] font-bold\n`;\nconst SideNavMainSubList = tw.ul`\n\n`;\nconst SideNavMainSubItem = tw.li`\n    text-[16px]\n    cursor-pointer\n`;\n\n\nexport default SideNav;\n\n\n// const SideNav: React.FunctionComponent<sideNavProps> = props => {"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}