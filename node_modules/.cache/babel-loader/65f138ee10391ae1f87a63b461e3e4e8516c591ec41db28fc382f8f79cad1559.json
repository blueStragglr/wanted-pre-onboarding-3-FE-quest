{"ast":null,"code":"var _jsxFileName = \"/Users/kimchosule/Desktop/study/wanted-pre-onboarding-test/src/components/Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [button, setButton] = useState(true);\n  function changeButton() {\n    //아이디에 @가 포함되어있고 비밀번호가 5자리 이상일때 로그인버튼이 활성화되는 기능을 구현하기위함\n    id.includes(\"@\") && pw.length >= 5 ? setButton(false) : setButton(true);\n  }\n  const navigate = useNavigate();\n  const goToMain = () => {\n    navigate(`/`);\n  };\n  const realId = \"chosule@naver.com\";\n  const realPw = \"12345\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      id: \"id\",\n      className: \"login\",\n      onChange: e => {\n        setId(e.target.value);\n      },\n      onKeyUp: changeButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      id: \"password\",\n      className: \"login\",\n      onChange: e => {\n        setPw(e.target.value);\n      },\n      onKeyUp: changeButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"loginButton\",\n      disabled: button,\n      onClick: e => {\n        if (realId === id) {\n          if (realPw === pw) {\n            e.stopPropagation();\n            goToMain();\n          }\n        } else {\n          alert(\"아이디 혹은 비밀번호가 일치하지않습니다.\");\n        }\n      },\n      children: \"\\uBC84\\uD2BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"sqIa3dJQWhL5tiB27qBww8V2Wpc=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Login","_s","id","setId","pw","setPw","button","setButton","changeButton","includes","length","navigate","goToMain","realId","realPw","children","placeholder","className","onChange","e","target","value","onKeyUp","fileName","_jsxFileName","lineNumber","columnNumber","type","disabled","onClick","stopPropagation","alert","_c","$RefreshReg$"],"sources":["/Users/kimchosule/Desktop/study/wanted-pre-onboarding-test/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Login() {\n  const [id, setId] = useState(\"\");\n  const [pw, setPw] = useState(\"\");\n  const [button, setButton] = useState(true);\n  function changeButton() {\n    //아이디에 @가 포함되어있고 비밀번호가 5자리 이상일때 로그인버튼이 활성화되는 기능을 구현하기위함\n    id.includes(\"@\") && pw.length >= 5 ? setButton(false) : setButton(true);\n  }\n  const navigate = useNavigate();\n  const goToMain = () => {\n    navigate(`/`);\n  };\n  const realId = \"chosule@naver.com\";\n  const realPw = \"12345\";\n  return (\n    <div>\n      <input\n        placeholder=\"이메일아이디를 입력하세요\"\n        id=\"id\"\n        className=\"login\"\n        onChange={(e) => {\n          setId(e.target.value);\n        }}\n        onKeyUp={changeButton}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"비밀번호를 입력하세요\"\n        id=\"password\"\n        className=\"login\"\n        onChange={(e) => {\n          setPw(e.target.value);\n        }}\n        onKeyUp={changeButton}\n      />\n      <button\n        type=\"button\"\n        className=\"loginButton\"\n        disabled={button}\n        onClick={(e) => {\n          if (realId === id) {\n            if (realPw === pw) {\n              e.stopPropagation();\n              goToMain();\n            }\n          } else {\n            alert(\"아이디 혹은 비밀번호가 일치하지않습니다.\");\n          }\n        }}\n      >\n        버튼\n      </button>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,EAAE,EAAEC,KAAK,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACQ,EAAE,EAAEC,KAAK,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChC,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,SAASY,YAAYA,CAAA,EAAG;IACtB;IACAN,EAAE,CAACO,QAAQ,CAAC,GAAG,CAAC,IAAIL,EAAE,CAACM,MAAM,IAAI,CAAC,GAAGH,SAAS,CAAC,KAAK,CAAC,GAAGA,SAAS,CAAC,IAAI,CAAC;EACzE;EACA,MAAMI,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAMe,QAAQ,GAAGA,CAAA,KAAM;IACrBD,QAAQ,CAAE,GAAE,CAAC;EACf,CAAC;EACD,MAAME,MAAM,GAAG,mBAAmB;EAClC,MAAMC,MAAM,GAAG,OAAO;EACtB,oBACEf,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEiB,WAAW,EAAC,2EAAe;MAC3Bd,EAAE,EAAC,IAAI;MACPe,SAAS,EAAC,OAAO;MACjBC,QAAQ,EAAGC,CAAC,IAAK;QACfhB,KAAK,CAACgB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MACvB,CAAE;MACFC,OAAO,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB,eACF3B,OAAA;MACE4B,IAAI,EAAC,UAAU;MACfX,WAAW,EAAC,+DAAa;MACzBd,EAAE,EAAC,UAAU;MACbe,SAAS,EAAC,OAAO;MACjBC,QAAQ,EAAGC,CAAC,IAAK;QACfd,KAAK,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;MACvB,CAAE;MACFC,OAAO,EAAEd;IAAa;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtB,eACF3B,OAAA;MACE4B,IAAI,EAAC,QAAQ;MACbV,SAAS,EAAC,aAAa;MACvBW,QAAQ,EAAEtB,MAAO;MACjBuB,OAAO,EAAGV,CAAC,IAAK;QACd,IAAIN,MAAM,KAAKX,EAAE,EAAE;UACjB,IAAIY,MAAM,KAAKV,EAAE,EAAE;YACjBe,CAAC,CAACW,eAAe,EAAE;YACnBlB,QAAQ,EAAE;UACZ;QACF,CAAC,MAAM;UACLmB,KAAK,CAAC,wBAAwB,CAAC;QACjC;MACF,CAAE;MAAAhB,QAAA,EACH;IAED;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACzB,EAAA,CAtDuBD,KAAK;EAAA,QAQVH,WAAW;AAAA;AAAAmC,EAAA,GARNhC,KAAK;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}