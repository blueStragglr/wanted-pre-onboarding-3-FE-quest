{"ast":null,"code":"var _jsxFileName = \"/Users/johyeyeon/so-hyeppy/src/Pages/Layout/SideNav.tsx\";\nimport React from 'react';\nimport tw from 'tailwind-styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet click = () => {\n  return alert('헬로');\n};\nconst CategoryList = _ref => {\n  let {\n    post\n  } = _ref;\n  let headTitle = sideNavMap.get(post.name);\n  if (headTitle) {\n    let sideNameDataMain = headTitle === null || headTitle === void 0 ? void 0 : headTitle.main; // Object is possibly 'null' 에러가 계속 떠서 옵셔널체이닝 사용하여 처리.\n    console.log('sideNameDataMain', sideNameDataMain);\n    return /*#__PURE__*/_jsxDEV(SideNavMain, {\n      children: sideNameDataMain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = CategoryList;\nconst SideNav = _ref2 => {\n  var _sideNavMap$get, _sideNavMap$get2;\n  let {\n    post\n  } = _ref2;\n  // const { name, sideNavPropsName } = post;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SideNavWrap, {\n      className: \"p-[32px]\",\n      children: [/*#__PURE__*/_jsxDEV(CategoryList, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SideNavMainSubList, {\n        children: sideNavMap.get(post.name) && ((_sideNavMap$get = sideNavMap.get(post.name)) === null || _sideNavMap$get === void 0 ? void 0 : _sideNavMap$get.data) && ((_sideNavMap$get2 = sideNavMap.get(post.name)) === null || _sideNavMap$get2 === void 0 ? void 0 : _sideNavMap$get2.data.map((row, index) => {\n          return /*#__PURE__*/_jsxDEV(SideNavMainSubItem, {\n            className: \"text-[18px]\",\n            onClick: () => {},\n            children: row.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }, this);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c2 = SideNav;\nconst sideNavArr = {\n  TodoList: {\n    id: 1,\n    main: 'To-Do-List',\n    data: [{\n      name: '오늘 할 일'\n    }, {\n      name: '지난 할 일'\n    }]\n    // data: ['오늘 할 일','지난 할 일']\n  },\n\n  Attendance: {\n    id: 2,\n    main: '근무/휴가',\n    data: [{\n      name: '근무/휴가'\n    }]\n  }\n};\nconst entry = Object.entries(sideNavArr);\nconst sideNavMap = new Map(entry);\nconsole.log('sideNavMap', sideNavMap);\nconst SideNavWrap = tw.div`\n  w-[240px] h-[calc(100vh + 50px)]] bg-[#F8F8F8]\n`;\n_c3 = SideNavWrap;\nconst SideNavMain = tw.div`\n    text-[20px] font-bold\n`;\n_c4 = SideNavMain;\nconst SideNavMainSubList = tw.ul`\n\n`;\n_c5 = SideNavMainSubList;\nconst SideNavMainSubItem = tw.li`\n    text-[16px]\n`;\n_c6 = SideNavMainSubItem;\nexport default SideNav;\n\n// const SideNav: React.FunctionComponent<sideNavProps> = props => {\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"CategoryList\");\n$RefreshReg$(_c2, \"SideNav\");\n$RefreshReg$(_c3, \"SideNavWrap\");\n$RefreshReg$(_c4, \"SideNavMain\");\n$RefreshReg$(_c5, \"SideNavMainSubList\");\n$RefreshReg$(_c6, \"SideNavMainSubItem\");","map":{"version":3,"names":["React","tw","click","alert","CategoryList","post","headTitle","sideNavMap","get","name","sideNameDataMain","main","console","log","SideNav","data","map","row","index","sideNavArr","TodoList","id","Attendance","entry","Object","entries","Map","SideNavWrap","div","SideNavMain","SideNavMainSubList","ul","SideNavMainSubItem","li"],"sources":["/Users/johyeyeon/so-hyeppy/src/Pages/Layout/SideNav.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport tw from 'tailwind-styled-components';\n\ninterface sideNavProps {\n    sideNavPropsName: string;\n    name: string;\n}\n\nlet click = () => {\n    return alert('헬로');\n};\n\nconst CategoryList = ({ post }: { post: sideNavProps }) =>{\n    let headTitle = sideNavMap.get(post.name);\n    if (headTitle) {\n        let sideNameDataMain = headTitle?.main // Object is possibly 'null' 에러가 계속 떠서 옵셔널체이닝 사용하여 처리.\n        console.log('sideNameDataMain',sideNameDataMain)\n        return <SideNavMain>{sideNameDataMain}</SideNavMain>\n    }\n    return <></>\n}\n\nconst SideNav = ({ post }: { post: sideNavProps }) => {\n    // const { name, sideNavPropsName } = post;\n    return (\n        <>\n            <SideNavWrap className=\"p-[32px]\">\n                <CategoryList post={post}></CategoryList>\n                <SideNavMainSubList>\n                    {\n                        sideNavMap.get(post.name)&&\n                        sideNavMap.get(post.name)?.data &&\n                        (sideNavMap.get(post.name)?.data.map((row,index)=>{\n                            return (\n                                <SideNavMainSubItem key={index} className=\"text-[18px]\" onClick={()=>{\n\n                                }}>{row.name}</SideNavMainSubItem>\n                            )\n                        }))\n                    }\n                </SideNavMainSubList>\n            </SideNavWrap>\n        </>\n    );\n};\n\nconst sideNavArr = {\n    TodoList : {\n        id: 1,\n        main: 'To-Do-List',\n        data: [{name:'오늘 할 일'},{name:'지난 할 일'}]\n        // data: ['오늘 할 일','지난 할 일']\n    },\n    Attendance: {\n        id: 2,\n        main: '근무/휴가',\n        data: [{name:'근무/휴가'}]\n    }\n}\n\nconst entry = Object.entries(sideNavArr);\nconst sideNavMap = new Map(entry);\nconsole.log('sideNavMap',sideNavMap);\n\nconst SideNavWrap = tw.div`\n  w-[240px] h-[calc(100vh + 50px)]] bg-[#F8F8F8]\n`;\nconst SideNavMain = tw.div`\n    text-[20px] font-bold\n`;\nconst SideNavMainSubList = tw.ul`\n\n`;\nconst SideNavMainSubItem = tw.li`\n    text-[16px]\n`;\n\n\nexport default SideNav;\n\n\n// const SideNav: React.FunctionComponent<sideNavProps> = props => {"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}