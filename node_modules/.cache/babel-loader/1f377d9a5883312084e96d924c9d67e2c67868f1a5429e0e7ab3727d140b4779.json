{"ast":null,"code":"var _jsxFileName = \"/Users/johyeyeon/so-hyeppy/src/Pages/TodoList/index.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport TodoListHead from \"./TodoListHead\";\nimport SideNav from \"../Layout/SideNav\";\nimport { useParams } from 'react-router-dom';\nimport TodoListBody from \"./TodoListBody\";\nimport { useRecoilValue } from \"recoil\";\nimport { urlParams } from \"../../Atom/Atoms\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #FFF;\n  }\n`;\n_c = GlobalStyle;\nconst TodoTemplateBlock = styled.div`\n  width: 512px;\n  height: 768px;\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = TodoTemplateBlock;\nconst TodoList = () => {\n  _s();\n  let {\n    username\n  } = useParams();\n  console.log('username', username);\n  const params = useRecoilValue(urlParams);\n  console.log('params', params);\n  const [category, setCategory] = React.useState({\n    sideNavPropsName: '오늘 할 일',\n    name: 'TodoList'\n  });\n  // const [categories, setCategories] = React.useState<sideNavProps[]>([]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [params == '', /*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SideNav, {\n      post: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoTemplateBlock, {\n      children: [/*#__PURE__*/_jsxDEV(TodoListHead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TodoListBody, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(TodoList, \"s5D6VdrX5OcDKogErVfyr7w/QfI=\", false, function () {\n  return [useParams, useRecoilValue];\n});\n_c3 = TodoList;\nexport default TodoList;\n\n// const tempFunc = () =>{\n//     let a: sideNavProps =\n//         {\n//             sideNavPropsName : '오늘 할 일',\n//             name : '오늘 할 일'\n//         };\n//\n//     let b :sideNavProps[] = [];\n//     for (let i = 0; i < 5; i++) {\n//         b.push(a)\n//     }\n//     return b;\n// }\n\n// console.log('tempFunc',tempFunc());\n// console.log('categories',categories);\n// console.log('sideCategory',sideCategory);\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"TodoTemplateBlock\");\n$RefreshReg$(_c3, \"TodoList\");","map":{"version":3,"names":["React","styled","createGlobalStyle","TodoListHead","SideNav","useParams","TodoListBody","useRecoilValue","urlParams","GlobalStyle","TodoTemplateBlock","div","TodoList","username","console","log","params","category","setCategory","useState","sideNavPropsName","name"],"sources":["/Users/johyeyeon/so-hyeppy/src/Pages/TodoList/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport TodoListHead from \"./TodoListHead\";\nimport SideNav from \"../Layout/SideNav\";\nimport { useParams } from 'react-router-dom';\nimport TodoListBody from \"./TodoListBody\";\nimport {useRecoilState, useRecoilValue} from \"recoil\";\nimport {urlParams} from \"../../Atom/Atoms\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #FFF;\n  }\n`;\nconst TodoTemplateBlock = styled.div`\n  width: 512px;\n  height: 768px;\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\n\ninterface sideNavProps {\n    sideNavPropsName: string;\n    name: string\n}\n\nconst TodoList = () => {\n    let { username } = useParams();\n    console.log('username',username)\n    const params = useRecoilValue(urlParams);\n    console.log('params',params);\n    const [category, setCategory] = React.useState<sideNavProps>({sideNavPropsName : '오늘 할 일', name : 'TodoList'});\n    // const [categories, setCategories] = React.useState<sideNavProps[]>([]);\n    return (\n        <>\n            {\n                params == ''\n            }\n            <GlobalStyle/>\n            {/*{tempFunc().forEach(item => <SideNav post={item}></SideNav>)}*/}\n            <SideNav post={category}></SideNav>\n            <TodoTemplateBlock>\n                <TodoListHead></TodoListHead>\n                <TodoListBody></TodoListBody>\n            </TodoTemplateBlock>\n        </>\n    );\n};\nexport default TodoList;\n\n\n\n\n\n\n\n\n\n\n\n// const tempFunc = () =>{\n//     let a: sideNavProps =\n//         {\n//             sideNavPropsName : '오늘 할 일',\n//             name : '오늘 할 일'\n//         };\n//\n//     let b :sideNavProps[] = [];\n//     for (let i = 0; i < 5; i++) {\n//         b.push(a)\n//     }\n//     return b;\n// }\n\n// console.log('tempFunc',tempFunc());\n// console.log('categories',categories);\n// console.log('sideCategory',sideCategory);\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAoB,OAAO;AACvC,OAAOC,MAAM,IAAIC,iBAAiB,QAAQ,mBAAmB;AAC7D,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAAwBC,cAAc,QAAO,QAAQ;AACrD,SAAQC,SAAS,QAAO,kBAAkB;AAAC;AAAA;AAE3C,MAAMC,WAAW,GAAGP,iBAAkB;AACtC;AACA;AACA;AACA,CAAC;AAAC,KAJIO,WAAW;AAKjB,MAAMC,iBAAiB,GAAGT,MAAM,CAACU,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,MAZID,iBAAiB;AAoBvB,MAAME,QAAQ,GAAG,MAAM;EAAA;EACnB,IAAI;IAAEC;EAAS,CAAC,GAAGR,SAAS,EAAE;EAC9BS,OAAO,CAACC,GAAG,CAAC,UAAU,EAACF,QAAQ,CAAC;EAChC,MAAMG,MAAM,GAAGT,cAAc,CAACC,SAAS,CAAC;EACxCM,OAAO,CAACC,GAAG,CAAC,QAAQ,EAACC,MAAM,CAAC;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,KAAK,CAACmB,QAAQ,CAAe;IAACC,gBAAgB,EAAG,QAAQ;IAAEC,IAAI,EAAG;EAAU,CAAC,CAAC;EAC9G;EACA,oBACI;IAAA,WAEQL,MAAM,IAAI,EAAE,eAEhB,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAE,eAEd,QAAC,OAAO;MAAC,IAAI,EAAEC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAW,eACnC,QAAC,iBAAiB;MAAA,wBACd,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAgB,eAC7B,QAAC,YAAY;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA;MAAA;MAAA;MAAA;IAAA,QACb;EAAA,gBACrB;AAEX,CAAC;AAAC,GArBIL,QAAQ;EAAA,QACSP,SAAS,EAEbE,cAAc;AAAA;AAAA,MAH3BK,QAAQ;AAsBd,eAAeA,QAAQ;;AAYvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}