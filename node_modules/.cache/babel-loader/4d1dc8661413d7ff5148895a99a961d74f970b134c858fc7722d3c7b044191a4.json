{"ast":null,"code":"var _s = $RefreshSig$();\n//check and logout\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { LoginState } from '../Atom/Atoms';\n// import { useCookies } from 'react-cookie'; // 쿠키를 이용한 방법\n\n// LoginCheck 이걸 안만들고 , 보니까\n// return { is_logined ?} 이런식으로 하는거같은데 .. 어떻게 하는게 맞는걸까\n\nconst LoginCheck = () => {\n  _s();\n  // const [cookies, setCookie, removeCookie] = useCookies(['id']);\n  // const [userID, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const insertedToken = localStorage.getItem('access_token');\n  const login_check = useRecoilValue(LoginState);\n  const authCheck = () => {\n    // 페이지에 들어올때 쿠키로 사용자 체크\n    /*** recoil-persist 방식 , 이게 맞나 모름 ㅠㅠ ***/\n    if (!login_check) {\n      navigate('/inter/IntroLogin');\n    }\n    /***토큰 , localStorage방식 ***/\n    const token = insertedToken; // localStorage 체크하기\n    // const token = cookies.id; // 쿠키에서 id 를 꺼내기\n    // if (token == undefined) {\n    //   navigate('/hyeyeon/login');\n    // }\n  };\n\n  useEffect(() => {\n    authCheck(); // 로그인 체크 함수\n  });\n};\n_s(LoginCheck, \"hmB5Y2NGrQ73K/onmY5i0spP5i0=\", false, function () {\n  return [useNavigate, useRecoilValue];\n});\n_c = LoginCheck;\nexport default LoginCheck;\nvar _c;\n$RefreshReg$(_c, \"LoginCheck\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useRecoilValue","LoginState","LoginCheck","navigate","insertedToken","localStorage","getItem","login_check","authCheck","token"],"sources":["/Users/johyeyeon/so-hyeppy/src/Components/LoginCheck.js"],"sourcesContent":["//check and logout\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { LoginState } from '../Atom/Atoms';\n// import { useCookies } from 'react-cookie'; // 쿠키를 이용한 방법\n\n// LoginCheck 이걸 안만들고 , 보니까\n// return { is_logined ?} 이런식으로 하는거같은데 .. 어떻게 하는게 맞는걸까\n\nconst LoginCheck = () => {\n  // const [cookies, setCookie, removeCookie] = useCookies(['id']);\n  // const [userID, setUserId] = useState(null);\n  const navigate = useNavigate();\n  const insertedToken = localStorage.getItem('access_token');\n  const login_check = useRecoilValue(LoginState);\n\n  const authCheck = () => {\n    // 페이지에 들어올때 쿠키로 사용자 체크\n    /*** recoil-persist 방식 , 이게 맞나 모름 ㅠㅠ ***/\n    if (!login_check) {\n      navigate('/inter/IntroLogin');\n    }\n    /***토큰 , localStorage방식 ***/\n    const token = insertedToken; // localStorage 체크하기\n    // const token = cookies.id; // 쿠키에서 id 를 꺼내기\n    // if (token == undefined) {\n    //   navigate('/hyeyeon/login');\n    // }\n  };\n\n  useEffect(() => {\n    authCheck(); // 로그인 체크 함수\n  });\n};\nexport default LoginCheck;\n"],"mappings":";AAAA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,QAAQ,QAAQ;AACvC,SAASC,UAAU,QAAQ,eAAe;AAC1C;;AAEA;AACA;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB;EACA;EACA,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;EAC1D,MAAMC,WAAW,GAAGP,cAAc,CAACC,UAAU,CAAC;EAE9C,MAAMO,SAAS,GAAG,MAAM;IACtB;IACA;IACA,IAAI,CAACD,WAAW,EAAE;MAChBJ,QAAQ,CAAC,mBAAmB,CAAC;IAC/B;IACA;IACA,MAAMM,KAAK,GAAGL,aAAa,CAAC,CAAC;IAC7B;IACA;IACA;IACA;EACF,CAAC;;EAEDP,SAAS,CAAC,MAAM;IACdW,SAAS,EAAE,CAAC,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;AAAC,GAxBIN,UAAU;EAAA,QAGGH,WAAW,EAERC,cAAc;AAAA;AAAA,KAL9BE,UAAU;AAyBhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}